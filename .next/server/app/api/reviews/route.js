(()=>{var e={};e.id=217,e.ids=[217],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},7265:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>d,serverHooks:()=>w,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>v});var n={};t.r(n),t.d(n,{GET:()=>c,POST:()=>p});var s=t(2706),a=t(8203),i=t(5994),o=t(9187),u=t(2925);async function c(){try{let e=await (0,u.X_)("reviews"),r=await e.find({}).toArray();return o.NextResponse.json(r)}catch(e){return o.NextResponse.json({error:"Internal Server Error"},{status:500})}}async function p(e){try{let r=await e.json(),t=await (0,u.X_)("reviews"),n=await t.find({}).sort({id:-1}).limit(1).toArray(),s=n.length>0?n[0].id+1:1,a={...r,id:s,created_at:new Date().toISOString()};return await t.insertOne(a),o.NextResponse.json(a)}catch(e){return o.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/reviews/route",pathname:"/api/reviews",filename:"route",bundlePath:"app/api/reviews/route"},resolvedPagePath:"/Users/ivarnycolaas/Documents/webdev/slowcinemaclub/app/api/reviews/route.ts",nextConfigOutput:"standalone",userland:n}),{workAsyncStorage:l,workUnitAsyncStorage:v,serverHooks:w}=d;function x(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:v})}},6487:()=>{},8335:()=>{},2925:(e,r,t)=>{"use strict";let n;t.d(r,{X_:()=>o});let s=require("mongodb");if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let a=process.env.MONGODB_URI;async function i(e){return(await n).db(e)}async function o(e,r){return(await i(e)).collection(r)}n=new s.MongoClient(a,{maxPoolSize:10,minPoolSize:5,maxIdleTimeMS:6e4,connectTimeoutMS:1e4,socketTimeoutMS:45e3}).connect()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[994,452],()=>t(7265));module.exports=n})();